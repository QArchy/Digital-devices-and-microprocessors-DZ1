// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1.22 SJ Full Version"

// DATE "03/12/2023 13:05:31"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module main (
	a,
	x0,
	x1,
	x2,
	x3,
	b,
	c,
	d,
	e,
	f,
	g);
output 	a;
input 	x0;
input 	x1;
input 	x2;
input 	x3;
output 	b;
output 	c;
output 	d;
output 	e;
output 	f;
output 	g;

// Design Ports Information
// a	=>  Location: PIN_143,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// c	=>  Location: PIN_144,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d	=>  Location: PIN_7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// e	=>  Location: PIN_11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// f	=>  Location: PIN_99,	 I/O Standard: 2.5 V,	 Current Strength: Default
// g	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x3	=>  Location: PIN_141,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x2	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x1	=>  Location: PIN_142,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x0	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Homework_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \a~output_o ;
wire \b~output_o ;
wire \c~output_o ;
wire \d~output_o ;
wire \e~output_o ;
wire \f~output_o ;
wire \g~output_o ;
wire \x1~input_o ;
wire \x0~input_o ;
wire \x2~input_o ;
wire \x3~input_o ;
wire \inst|inst|inst18~0_combout ;
wire \inst|inst1|inst17~0_combout ;
wire \inst|inst2|inst10~0_combout ;
wire \inst|inst3|inst26~0_combout ;
wire \inst|inst4|inst9~0_combout ;
wire \inst|inst5|inst26~0_combout ;
wire \inst|inst6|inst21~0_combout ;


// Location: IOOBUF_X1_Y24_N2
cycloneive_io_obuf \a~output (
	.i(!\inst|inst|inst18~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\a~output_o ),
	.obar());
// synopsys translate_off
defparam \a~output .bus_hold = "false";
defparam \a~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y23_N16
cycloneive_io_obuf \b~output (
	.i(\inst|inst1|inst17~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\b~output_o ),
	.obar());
// synopsys translate_off
defparam \b~output .bus_hold = "false";
defparam \b~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y24_N9
cycloneive_io_obuf \c~output (
	.i(\inst|inst2|inst10~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\c~output_o ),
	.obar());
// synopsys translate_off
defparam \c~output .bus_hold = "false";
defparam \c~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y21_N9
cycloneive_io_obuf \d~output (
	.i(!\inst|inst3|inst26~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\d~output_o ),
	.obar());
// synopsys translate_off
defparam \d~output .bus_hold = "false";
defparam \d~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y18_N23
cycloneive_io_obuf \e~output (
	.i(\inst|inst4|inst9~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\e~output_o ),
	.obar());
// synopsys translate_off
defparam \e~output .bus_hold = "false";
defparam \e~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X34_Y17_N16
cycloneive_io_obuf \f~output (
	.i(!\inst|inst5|inst26~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \g~output (
	.i(\inst|inst6|inst21~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\g~output_o ),
	.obar());
// synopsys translate_off
defparam \g~output .bus_hold = "false";
defparam \g~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X3_Y24_N22
cycloneive_io_ibuf \x1~input (
	.i(x1),
	.ibar(gnd),
	.o(\x1~input_o ));
// synopsys translate_off
defparam \x1~input .bus_hold = "false";
defparam \x1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y6_N22
cycloneive_io_ibuf \x0~input (
	.i(x0),
	.ibar(gnd),
	.o(\x0~input_o ));
// synopsys translate_off
defparam \x0~input .bus_hold = "false";
defparam \x0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneive_io_ibuf \x2~input (
	.i(x2),
	.ibar(gnd),
	.o(\x2~input_o ));
// synopsys translate_off
defparam \x2~input .bus_hold = "false";
defparam \x2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X5_Y24_N8
cycloneive_io_ibuf \x3~input (
	.i(x3),
	.ibar(gnd),
	.o(\x3~input_o ));
// synopsys translate_off
defparam \x3~input .bus_hold = "false";
defparam \x3~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N8
cycloneive_lcell_comb \inst|inst|inst18~0 (
// Equation(s):
// \inst|inst|inst18~0_combout  = (\x1~input_o  & (((\x3~input_o )))) # (!\x1~input_o  & (\x2~input_o  $ (((\x0~input_o  & !\x3~input_o )))))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst|inst18~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|inst18~0 .lut_mask = 16'hFA14;
defparam \inst|inst|inst18~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N10
cycloneive_lcell_comb \inst|inst1|inst17~0 (
// Equation(s):
// \inst|inst1|inst17~0_combout  = (\x2~input_o  & (!\x3~input_o  & (\x1~input_o  $ (!\x0~input_o )))) # (!\x2~input_o  & (((!\x3~input_o )) # (!\x1~input_o )))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst1|inst17~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|inst17~0 .lut_mask = 16'h059F;
defparam \inst|inst1|inst17~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N20
cycloneive_lcell_comb \inst|inst2|inst10~0 (
// Equation(s):
// \inst|inst2|inst10~0_combout  = (\x2~input_o  & (((!\x3~input_o )))) # (!\x2~input_o  & (((\x0~input_o  & !\x3~input_o )) # (!\x1~input_o )))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst2|inst10~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2|inst10~0 .lut_mask = 16'h05FD;
defparam \inst|inst2|inst10~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N30
cycloneive_lcell_comb \inst|inst3|inst26~0 (
// Equation(s):
// \inst|inst3|inst26~0_combout  = (\x2~input_o  & ((\x3~input_o ) # (\x1~input_o  $ (!\x0~input_o )))) # (!\x2~input_o  & (\x0~input_o  & (\x1~input_o  $ (!\x3~input_o ))))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst3|inst26~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst3|inst26~0 .lut_mask = 16'hF894;
defparam \inst|inst3|inst26~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N0
cycloneive_lcell_comb \inst|inst4|inst9~0 (
// Equation(s):
// \inst|inst4|inst9~0_combout  = (!\x0~input_o  & (((\x1~input_o  & !\x3~input_o )) # (!\x2~input_o )))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst4|inst9~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst4|inst9~0 .lut_mask = 16'h0323;
defparam \inst|inst4|inst9~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N26
cycloneive_lcell_comb \inst|inst5|inst26~0 (
// Equation(s):
// \inst|inst5|inst26~0_combout  = (\x1~input_o  & ((\x0~input_o ) # (\x2~input_o  $ (!\x3~input_o )))) # (!\x1~input_o  & ((\x2~input_o  & ((\x3~input_o ))) # (!\x2~input_o  & (\x0~input_o  & !\x3~input_o ))))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst5|inst26~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst5|inst26~0 .lut_mask = 16'hF88E;
defparam \inst|inst5|inst26~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X3_Y17_N4
cycloneive_lcell_comb \inst|inst6|inst21~0 (
// Equation(s):
// \inst|inst6|inst21~0_combout  = (\x1~input_o  & (!\x3~input_o  & ((!\x2~input_o ) # (!\x0~input_o )))) # (!\x1~input_o  & ((\x2~input_o  $ (\x3~input_o ))))

	.dataa(\x1~input_o ),
	.datab(\x0~input_o ),
	.datac(\x2~input_o ),
	.datad(\x3~input_o ),
	.cin(gnd),
	.combout(\inst|inst6|inst21~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst6|inst21~0 .lut_mask = 16'h057A;
defparam \inst|inst6|inst21~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign a = \a~output_o ;

assign b = \b~output_o ;

assign c = \c~output_o ;

assign d = \d~output_o ;

assign e = \e~output_o ;

assign f = \f~output_o ;

assign g = \g~output_o ;

endmodule
